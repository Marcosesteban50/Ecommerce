@page "/categoria"
@page "/categoria/{Id:int}"


@inject ICategoriaServicio categoriaServicio
@inject IToastService toastService

@attribute [Authorize(Roles = "Administrador")]


@*lo injectamos en el Imports.razor pero no se si este bien hacerlo globalmente despues investigar*@
@*@inject NavigationManager navServicio*@


<div class="row justify-content-center  mt-3">
    <p class="col-sm-12 col-md-8 col-xl-10 h4 mt-2">@Titulo</p>
</div>
<div class="row justify-content-center  mt-3">
    <div class="col-sm-12 col-md-8 col-xl-10">

        <EditForm Model="modelo" OnValidSubmit="GuardarCambios">
            <DataAnnotationsValidator></DataAnnotationsValidator>
            <div class="input-group">
                <span class="input-group-text bg-light">Nombre</span>
                <input type="text" class="form-control" @bind-value="modelo.Nombre">
            </div>
            <ValidationMessage For="@(()=>modelo.Nombre)" />

            <div class="mt-3">
                <button type="submit" class="btn btn-primary" style="width:130px">@boton</button>
                <a href="/categorias" class="btn btn-secondary" style="width:130px">Volver</a>
            </div>
        </EditForm>


    </div>

</div>



@code{




    [Parameter] public int Id { get; set; }
    private string Titulo = "Nuevo Categoria";
    private string boton = "Crear";
    private CategoriaDTO modelo = new CategoriaDTO();




    protected override async Task OnParametersSetAsync()
    {
        //editando un usuario si es diferente de 0
        if (Id != 0)
        {
            Titulo = "Editar Categoria";
            boton = "Actualizar";



            var response = await categoriaServicio.Obtener(Id);

            if (response.EsCorrecto!)
            {

                //Recibiendo toda la informacion del Usuario
                modelo = (CategoriaDTO)response.Resultado!;

            }
            else
            {
                toastService.ShowWarning(response.Mensaje!);
            }
        }
    }










    private async Task GuardarCambios()
    {


        bool respuesta = true;

        string mensaje = string.Empty;

        if (Id != 0)
        {
            var response = await categoriaServicio.Editar(modelo);

            if (response.EsCorrecto)
            {
                mensaje = "Categoria fue modificada";
                toastService.ShowInfo(mensaje);
            }
            else
            {
                respuesta = false;
                mensaje = "No pudo editar";
            }
        }



        else
        {
            
            var response = await categoriaServicio.Crear(modelo);


            if (response.EsCorrecto)
            {

                mensaje = "Categoria creada";
                toastService.ShowSuccess(mensaje);

            }
            else
            {
                respuesta = false;
                mensaje = "No  pudo crear";
            }
        }



        if (respuesta)
        {
            navServicio.NavigateTo("/categorias");

        }
        else
        {
            toastService.ShowWarning(mensaje);

        }
    }


}